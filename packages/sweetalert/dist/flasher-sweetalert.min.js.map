{"version":3,"file":"flasher-sweetalert.min.js","sources":["../../../node_modules/.pnpm/sweetalert2@11.7.12/node_modules/sweetalert2/dist/sweetalert2.js","../src/sweetalert.ts","../src/index.ts"],"sourcesContent":["/*!\n* sweetalert2 v11.7.12\n* Released under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Sweetalert2 = factory());\n})(this, (function () { 'use strict';\n\n  const RESTORE_FOCUS_TIMEOUT = 100;\n\n  /** @type {GlobalState} */\n  const globalState = {};\n  const focusPreviousActiveElement = () => {\n    if (globalState.previousActiveElement instanceof HTMLElement) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  };\n\n  /**\n   * Restore previous active (focused) element\n   *\n   * @param {boolean} returnFocus\n   * @returns {Promise<void>}\n   */\n  const restoreActiveElement = returnFocus => {\n    return new Promise(resolve => {\n      if (!returnFocus) {\n        return resolve();\n      }\n      const x = window.scrollX;\n      const y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(() => {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      window.scrollTo(x, y);\n    });\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateProps = {\n    promise: new WeakMap(),\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n\n  const swalPrefix = 'swal2-';\n\n  /**\n   * @typedef\n   * { | 'container'\n   *   | 'shown'\n   *   | 'height-auto'\n   *   | 'iosfix'\n   *   | 'popup'\n   *   | 'modal'\n   *   | 'no-backdrop'\n   *   | 'no-transition'\n   *   | 'toast'\n   *   | 'toast-shown'\n   *   | 'show'\n   *   | 'hide'\n   *   | 'close'\n   *   | 'title'\n   *   | 'html-container'\n   *   | 'actions'\n   *   | 'confirm'\n   *   | 'deny'\n   *   | 'cancel'\n   *   | 'default-outline'\n   *   | 'footer'\n   *   | 'icon'\n   *   | 'icon-content'\n   *   | 'image'\n   *   | 'input'\n   *   | 'file'\n   *   | 'range'\n   *   | 'select'\n   *   | 'radio'\n   *   | 'checkbox'\n   *   | 'label'\n   *   | 'textarea'\n   *   | 'inputerror'\n   *   | 'input-label'\n   *   | 'validation-message'\n   *   | 'progress-steps'\n   *   | 'active-progress-step'\n   *   | 'progress-step'\n   *   | 'progress-step-line'\n   *   | 'loader'\n   *   | 'loading'\n   *   | 'styled'\n   *   | 'top'\n   *   | 'top-start'\n   *   | 'top-end'\n   *   | 'top-left'\n   *   | 'top-right'\n   *   | 'center'\n   *   | 'center-start'\n   *   | 'center-end'\n   *   | 'center-left'\n   *   | 'center-right'\n   *   | 'bottom'\n   *   | 'bottom-start'\n   *   | 'bottom-end'\n   *   | 'bottom-left'\n   *   | 'bottom-right'\n   *   | 'grow-row'\n   *   | 'grow-column'\n   *   | 'grow-fullscreen'\n   *   | 'rtl'\n   *   | 'timer-progress-bar'\n   *   | 'timer-progress-bar-container'\n   *   | 'scrollbar-measure'\n   *   | 'icon-success'\n   *   | 'icon-warning'\n   *   | 'icon-info'\n   *   | 'icon-question'\n   *   | 'icon-error'\n   * } SwalClass\n   * @typedef {Record<SwalClass, string>} SwalClasses\n   */\n\n  /**\n   * @typedef {'success' | 'warning' | 'info' | 'question' | 'error'} SwalIcon\n   * @typedef {Record<SwalIcon, string>} SwalIcons\n   */\n\n  /** @type {SwalClass[]} */\n  const classNames = ['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error'];\n  const swalClasses = classNames.reduce((acc, className) => {\n    acc[className] = swalPrefix + className;\n    return acc;\n  }, /** @type {SwalClasses} */{});\n\n  /** @type {SwalIcon[]} */\n  const icons = ['success', 'warning', 'info', 'question', 'error'];\n  const iconTypes = icons.reduce((acc, icon) => {\n    acc[icon] = swalPrefix + icon;\n    return acc;\n  }, /** @type {SwalIcons} */{});\n\n  const consolePrefix = 'SweetAlert2:';\n\n  /**\n   * Capitalize the first letter of a string\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n  /**\n   * Standardize console warnings\n   *\n   * @param {string | string[]} message\n   */\n  const warn = message => {\n    console.warn(`${consolePrefix} ${typeof message === 'object' ? message.join(' ') : message}`);\n  };\n\n  /**\n   * Standardize console errors\n   *\n   * @param {string} message\n   */\n  const error = message => {\n    console.error(`${consolePrefix} ${message}`);\n  };\n\n  /**\n   * Private global state for `warnOnce`\n   *\n   * @type {string[]}\n   * @private\n   */\n  const previousWarnOnceMessages = [];\n\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   *\n   * @param {string} message\n   */\n  const warnOnce = message => {\n    if (!previousWarnOnceMessages.includes(message)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   *\n   * @param {string} deprecatedParam\n   * @param {string} useInstead\n   */\n  const warnAboutDeprecation = (deprecatedParam, useInstead) => {\n    warnOnce(`\"${deprecatedParam}\" is deprecated and will be removed in the next major release. Please use \"${useInstead}\" instead.`);\n  };\n\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   *\n   * @param {Function | any} arg\n   * @returns {any}\n   */\n  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';\n\n  /**\n   * @param {any} arg\n   * @returns {Promise<any>}\n   */\n  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const isPromise = arg => arg && Promise.resolve(arg) === arg;\n\n  /**\n   * Gets the popup container which contains the backdrop and the popup itself.\n   *\n   * @returns {HTMLElement | null}\n   */\n  const getContainer = () => document.body.querySelector(`.${swalClasses.container}`);\n\n  /**\n   * @param {string} selectorString\n   * @returns {HTMLElement | null}\n   */\n  const elementBySelector = selectorString => {\n    const container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n\n  /**\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n  const elementByClass = className => {\n    return elementBySelector(`.${className}`);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getPopup = () => elementByClass(swalClasses.popup);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIcon = () => elementByClass(swalClasses.icon);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIconContent = () => elementByClass(swalClasses['icon-content']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTitle = () => elementByClass(swalClasses.title);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getImage = () => elementByClass(swalClasses.image);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getConfirmButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getCancelButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);\n\n  /**\n   * @returns {HTMLButtonElement | null}\n   */\n  const getDenyButton = () => /** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getInputLabel = () => elementByClass(swalClasses['input-label']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getLoader = () => elementBySelector(`.${swalClasses.loader}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getActions = () => elementByClass(swalClasses.actions);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getFooter = () => elementByClass(swalClasses.footer);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCloseButton = () => elementByClass(swalClasses.close);\n\n  // https://github.com/jkup/focusable/blob/master/index.js\n  const focusable = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n`;\n  /**\n   * @returns {HTMLElement[]}\n   */\n  const getFocusableElements = () => {\n    /** @type {NodeListOf<HTMLElement>} */\n    const focusableElementsWithTabindex = getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])');\n    const focusableElementsWithTabindexSorted = Array.from(focusableElementsWithTabindex)\n    // sort according to tabindex\n    .sort((a, b) => {\n      const tabindexA = parseInt(a.getAttribute('tabindex'));\n      const tabindexB = parseInt(b.getAttribute('tabindex'));\n      if (tabindexA > tabindexB) {\n        return 1;\n      } else if (tabindexA < tabindexB) {\n        return -1;\n      }\n      return 0;\n    });\n\n    /** @type {NodeListOf<HTMLElement>} */\n    const otherFocusableElements = getPopup().querySelectorAll(focusable);\n    const otherFocusableElementsFiltered = Array.from(otherFocusableElements).filter(el => el.getAttribute('tabindex') !== '-1');\n    return [...new Set(focusableElementsWithTabindexSorted.concat(otherFocusableElementsFiltered))].filter(el => isVisible$1(el));\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isModal = () => {\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isToast = () => {\n    return getPopup() && hasClass(getPopup(), swalClasses.toast);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isLoading = () => {\n    return getPopup().hasAttribute('data-loading');\n  };\n\n  /**\n   * Securely set innerHTML of an element\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\n   *\n   * @param {HTMLElement} elem\n   * @param {string} html\n   */\n  const setInnerHtml = (elem, html) => {\n    elem.textContent = '';\n    if (html) {\n      const parser = new DOMParser();\n      const parsed = parser.parseFromString(html, `text/html`);\n      Array.from(parsed.querySelector('head').childNodes).forEach(child => {\n        elem.appendChild(child);\n      });\n      Array.from(parsed.querySelector('body').childNodes).forEach(child => {\n        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {\n          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507\n        } else {\n          elem.appendChild(child);\n        }\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {boolean}\n   */\n  const hasClass = (elem, className) => {\n    if (!className) {\n      return false;\n    }\n    const classList = className.split(/\\s+/);\n    for (let i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   */\n  const removeCustomClasses = (elem, params) => {\n    Array.from(elem.classList).forEach(className => {\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   * @param {string} className\n   */\n  const applyCustomClass = (elem, params, className) => {\n    removeCustomClasses(elem, params);\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`);\n        return;\n      }\n      addClass(elem, params.customClass[className]);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {import('./renderers/renderInput').InputClass} inputClass\n   * @returns {HTMLInputElement | null}\n   */\n  const getInput$1 = (popup, inputClass) => {\n    if (!inputClass) {\n      return null;\n    }\n    switch (inputClass) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputClass]}`);\n      case 'checkbox':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`);\n      case 'radio':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) || popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`);\n      case 'range':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`);\n      default:\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\n   */\n  const focusInput = input => {\n    input.focus();\n\n    // place cursor at end of text in text input\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      const val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   * @param {boolean} condition\n   */\n  const toggleClass = (target, classList, condition) => {\n    if (!target || !classList) {\n      return;\n    }\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n    classList.forEach(className => {\n      if (Array.isArray(target)) {\n        target.forEach(elem => {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const addClass = (target, classList) => {\n    toggleClass(target, classList, true);\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const removeClass = (target, classList) => {\n    toggleClass(target, classList, false);\n  };\n\n  /**\n   * Get direct child of an element by class name\n   *\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {HTMLElement | undefined}\n   */\n  const getDirectChildByClass = (elem, className) => {\n    const children = Array.from(elem.children);\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child instanceof HTMLElement && hasClass(child, className)) {\n        return child;\n      }\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} property\n   * @param {*} value\n   */\n  const applyNumericalStyle = (elem, property, value) => {\n    if (value === `${parseInt(value)}`) {\n      value = parseInt(value);\n    }\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? `${value}px` : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n\n  /**\n   * @param {HTMLElement | null} elem\n   * @param {string} display\n   */\n  const show = function (elem) {\n    let display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem && (elem.style.display = display);\n  };\n\n  /**\n   * @param {HTMLElement | null} elem\n   */\n  const hide = elem => {\n    elem && (elem.style.display = 'none');\n  };\n\n  /**\n   * @param {HTMLElement} parent\n   * @param {string} selector\n   * @param {string} property\n   * @param {string} value\n   */\n  const setStyle = (parent, selector, property, value) => {\n    /** @type {HTMLElement} */\n    const el = parent.querySelector(selector);\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {any} condition\n   * @param {string} display\n   */\n  const toggle = function (elem, condition) {\n    let display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\n    condition ? show(elem, display) : hide(elem);\n  };\n\n  /**\n   * borrowed from jquery $(elem).is(':visible') implementation\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isVisible$1 = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n\n  /**\n   * @returns {boolean}\n   */\n  const allButtonsAreHidden = () => !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);\n\n  /**\n   * borrowed from https://stackoverflow.com/a/46352119\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const hasCssAnimation = elem => {\n    const style = window.getComputedStyle(elem);\n    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n\n  /**\n   * @param {number} timer\n   * @param {boolean} reset\n   */\n  const animateTimerProgressBar = function (timer) {\n    let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const timerProgressBar = getTimerProgressBar();\n    if (isVisible$1(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n      setTimeout(() => {\n        timerProgressBar.style.transition = `width ${timer / 1000}s linear`;\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  const stopTimerProgressBar = () => {\n    const timerProgressBar = getTimerProgressBar();\n    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n    timerProgressBar.style.width = `${timerProgressBarPercent}%`;\n  };\n\n  /**\n   * Detect Node env\n   *\n   * @returns {boolean}\n   */\n  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';\n\n  const sweetHTML = `\n <div aria-labelledby=\"${swalClasses.title}\" aria-describedby=\"${swalClasses['html-container']}\" class=\"${swalClasses.popup}\" tabindex=\"-1\">\n   <button type=\"button\" class=\"${swalClasses.close}\"></button>\n   <ul class=\"${swalClasses['progress-steps']}\"></ul>\n   <div class=\"${swalClasses.icon}\"></div>\n   <img class=\"${swalClasses.image}\" />\n   <h2 class=\"${swalClasses.title}\" id=\"${swalClasses.title}\"></h2>\n   <div class=\"${swalClasses['html-container']}\" id=\"${swalClasses['html-container']}\"></div>\n   <input class=\"${swalClasses.input}\" />\n   <input type=\"file\" class=\"${swalClasses.file}\" />\n   <div class=\"${swalClasses.range}\">\n     <input type=\"range\" />\n     <output></output>\n   </div>\n   <select class=\"${swalClasses.select}\"></select>\n   <div class=\"${swalClasses.radio}\"></div>\n   <label for=\"${swalClasses.checkbox}\" class=\"${swalClasses.checkbox}\">\n     <input type=\"checkbox\" />\n     <span class=\"${swalClasses.label}\"></span>\n   </label>\n   <textarea class=\"${swalClasses.textarea}\"></textarea>\n   <div class=\"${swalClasses['validation-message']}\" id=\"${swalClasses['validation-message']}\"></div>\n   <div class=\"${swalClasses.actions}\">\n     <div class=\"${swalClasses.loader}\"></div>\n     <button type=\"button\" class=\"${swalClasses.confirm}\"></button>\n     <button type=\"button\" class=\"${swalClasses.deny}\"></button>\n     <button type=\"button\" class=\"${swalClasses.cancel}\"></button>\n   </div>\n   <div class=\"${swalClasses.footer}\"></div>\n   <div class=\"${swalClasses['timer-progress-bar-container']}\">\n     <div class=\"${swalClasses['timer-progress-bar']}\"></div>\n   </div>\n </div>\n`.replace(/(^|\\n)\\s*/g, '');\n\n  /**\n   * @returns {boolean}\n   */\n  const resetOldContainer = () => {\n    const oldContainer = getContainer();\n    if (!oldContainer) {\n      return false;\n    }\n    oldContainer.remove();\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n  const resetValidationMessage$1 = () => {\n    globalState.currentInstance.resetValidationMessage();\n  };\n  const addInputChangeListeners = () => {\n    const popup = getPopup();\n    const input = getDirectChildByClass(popup, swalClasses.input);\n    const file = getDirectChildByClass(popup, swalClasses.file);\n    /** @type {HTMLInputElement} */\n    const range = popup.querySelector(`.${swalClasses.range} input`);\n    /** @type {HTMLOutputElement} */\n    const rangeOutput = popup.querySelector(`.${swalClasses.range} output`);\n    const select = getDirectChildByClass(popup, swalClasses.select);\n    /** @type {HTMLInputElement} */\n    const checkbox = popup.querySelector(`.${swalClasses.checkbox} input`);\n    const textarea = getDirectChildByClass(popup, swalClasses.textarea);\n    input.oninput = resetValidationMessage$1;\n    file.onchange = resetValidationMessage$1;\n    select.onchange = resetValidationMessage$1;\n    checkbox.onchange = resetValidationMessage$1;\n    textarea.oninput = resetValidationMessage$1;\n    range.oninput = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n    range.onchange = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n  };\n\n  /**\n   * @param {string | HTMLElement} target\n   * @returns {HTMLElement}\n   */\n  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setupAccessibility = params => {\n    const popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n\n  /**\n   * @param {HTMLElement} targetElement\n   */\n  const setupRTL = targetElement => {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n\n  /**\n   * Add modal + backdrop + no-war message for Russians to DOM\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const init = params => {\n    // Clean up the old popup container if it exists\n    const oldContainerExisted = resetOldContainer();\n\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n    const container = document.createElement('div');\n    container.className = swalClasses.container;\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n    setInnerHtml(container, sweetHTML);\n    const targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  /**\n   * @param {HTMLElement | object | string} param\n   * @param {HTMLElement} target\n   */\n  const parseHtmlToContainer = (param, target) => {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param);\n    }\n\n    // Object\n    else if (typeof param === 'object') {\n      handleObject(param, target);\n    }\n\n    // Plain string\n    else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n\n  /**\n   * @param {object} param\n   * @param {HTMLElement} target\n   */\n  const handleObject = (param, target) => {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param);\n    }\n\n    // For other objects use their string representation\n    else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n\n  /**\n   * @param {HTMLElement} target\n   * @param {HTMLElement} elem\n   */\n  const handleJqueryElem = (target, elem) => {\n    target.textContent = '';\n    if (0 in elem) {\n      for (let i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  /**\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\n   */\n  const animationEndEvent = (() => {\n    // Prevent run in Node env\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      return false;\n    }\n    const testEl = document.createElement('div');\n    const transEndEventNames = {\n      WebkitAnimation: 'webkitAnimationEnd',\n      // Chrome, Safari and Opera\n      animation: 'animationend' // Standard syntax\n    };\n\n    for (const i in transEndEventNames) {\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n        return transEndEventNames[i];\n      }\n    }\n    return false;\n  })();\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderActions = (instance, params) => {\n    const actions = getActions();\n    const loader = getLoader();\n\n    // Actions (buttons) wrapper\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } else {\n      show(actions);\n    }\n\n    // Custom class\n    applyCustomClass(actions, params, 'actions');\n\n    // Render all the buttons\n    renderButtons(actions, loader, params);\n\n    // Loader\n    setInnerHtml(loader, params.loaderHtml);\n    applyCustomClass(loader, params, 'loader');\n  };\n\n  /**\n   * @param {HTMLElement} actions\n   * @param {HTMLElement} loader\n   * @param {SweetAlertOptions} params\n   */\n  function renderButtons(actions, loader, params) {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n\n    // Render buttons\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n    if (params.reverseButtons) {\n      if (params.toast) {\n        actions.insertBefore(cancelButton, confirmButton);\n        actions.insertBefore(denyButton, confirmButton);\n      } else {\n        actions.insertBefore(cancelButton, loader);\n        actions.insertBefore(denyButton, loader);\n        actions.insertBefore(confirmButton, loader);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} confirmButton\n   * @param {HTMLElement} denyButton\n   * @param {HTMLElement} cancelButton\n   * @param {SweetAlertOptions} params\n   */\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n      return;\n    }\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n      addClass(confirmButton, swalClasses['default-outline']);\n    }\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n      addClass(denyButton, swalClasses['default-outline']);\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n      addClass(cancelButton, swalClasses['default-outline']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} button\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\n   * @param {SweetAlertOptions} params\n   */\n  function renderButton(button, buttonType, params) {\n    toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block');\n    setInnerHtml(button, params[`${buttonType}ButtonText`]); // Set caption text\n    button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]); // ARIA label\n\n    // Add buttons custom classes\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, `${buttonType}Button`);\n    addClass(button, params[`${buttonType}ButtonClass`]);\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderCloseButton = (instance, params) => {\n    const closeButton = getCloseButton();\n    if (!closeButton) {\n      return;\n    }\n    setInnerHtml(closeButton, params.closeButtonHtml || '');\n\n    // Custom class\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel || '');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContainer = (instance, params) => {\n    const container = getContainer();\n    if (!container) {\n      return;\n    }\n    handleBackdropParam(container, params.backdrop);\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow);\n\n    // Custom class\n    applyCustomClass(container, params, 'container');\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['backdrop']} backdrop\n   */\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['position']} position\n   */\n  function handlePositionParam(container, position) {\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['grow']} grow\n   */\n  function handleGrowParam(container, grow) {\n    if (grow && typeof grow === 'string') {\n      const growClass = `grow-${grow}`;\n      if (growClass in swalClasses) {\n        addClass(container, swalClasses[growClass]);\n      }\n    }\n  }\n\n  /// <reference path=\"../../../../sweetalert2.d.ts\"/>\n\n\n  /** @type {InputClass[]} */\n  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderInput = (instance, params) => {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(instance);\n    const rerender = !innerParams || params.input !== innerParams.input;\n    inputClasses.forEach(inputClass => {\n      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);\n\n      // set attributes\n      setAttributes(inputClass, params.inputAttributes);\n\n      // set class\n      inputContainer.className = swalClasses[inputClass];\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      }\n      // set custom class\n      setCustomClass(params);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const showInput = params => {\n    if (!renderInputType[params.input]) {\n      error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`);\n      return;\n    }\n    const inputContainer = getInputContainer(params.input);\n    const input = renderInputType[params.input](inputContainer, params);\n    show(inputContainer);\n\n    // input autofocus\n    if (params.inputAutoFocus) {\n      setTimeout(() => {\n        focusInput(input);\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   */\n  const removeAttributes = input => {\n    for (let i = 0; i < input.attributes.length; i++) {\n      const attrName = input.attributes[i].name;\n      if (!['type', 'value', 'style'].includes(attrName)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n\n  /**\n   * @param {InputClass} inputClass\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\n   */\n  const setAttributes = (inputClass, inputAttributes) => {\n    const input = getInput$1(getPopup(), inputClass);\n    if (!input) {\n      return;\n    }\n    removeAttributes(input);\n    for (const attr in inputAttributes) {\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setCustomClass = params => {\n    const inputContainer = getInputContainer(params.input);\n    if (typeof params.customClass === 'object') {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions} params\n   */\n  const setInputPlaceholder = (input, params) => {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n\n  /**\n   * @param {Input} input\n   * @param {Input} prependTo\n   * @param {SweetAlertOptions} params\n   */\n  const setInputLabel = (input, prependTo, params) => {\n    if (params.inputLabel) {\n      input.id = swalClasses.input;\n      const label = document.createElement('label');\n      const labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n      if (typeof params.customClass === 'object') {\n        addClass(label, params.customClass.inputLabel);\n      }\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions['input']} inputType\n   * @returns {HTMLElement}\n   */\n  const getInputContainer = inputType => {\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions['inputValue']} inputValue\n   */\n  const checkAndSetInputValue = (input, inputValue) => {\n    if (['string', 'number'].includes(typeof inputValue)) {\n      input.value = `${inputValue}`;\n    } else if (!isPromise(inputValue)) {\n      warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof inputValue}\"`);\n    }\n  };\n\n  /** @type {Record<string, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */\n  const renderInputType = {};\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n    checkAndSetInputValue(input, params.inputValue);\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.file = (input, params) => {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} range\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.range = (range, params) => {\n    const rangeInput = range.querySelector('input');\n    const rangeOutput = range.querySelector('output');\n    checkAndSetInputValue(rangeInput, params.inputValue);\n    rangeInput.type = params.input;\n    checkAndSetInputValue(rangeOutput, params.inputValue);\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n\n  /**\n   * @param {HTMLSelectElement} select\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLSelectElement}\n   */\n  renderInputType.select = (select, params) => {\n    select.textContent = '';\n    if (params.inputPlaceholder) {\n      const placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n    setInputLabel(select, select, params);\n    return select;\n  };\n\n  /**\n   * @param {HTMLInputElement} radio\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.radio = radio => {\n    radio.textContent = '';\n    return radio;\n  };\n\n  /**\n   * @param {HTMLLabelElement} checkboxContainer\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.checkbox = (checkboxContainer, params) => {\n    const checkbox = getInput$1(getPopup(), 'checkbox');\n    checkbox.value = '1';\n    checkbox.id = swalClasses.checkbox;\n    checkbox.checked = Boolean(params.inputValue);\n    const label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkbox;\n  };\n\n  /**\n   * @param {HTMLTextAreaElement} textarea\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLTextAreaElement}\n   */\n  renderInputType.textarea = (textarea, params) => {\n    checkAndSetInputValue(textarea, params.inputValue);\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n\n    /**\n     * @param {HTMLElement} el\n     * @returns {number}\n     */\n    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);\n\n    // https://github.com/sweetalert2/sweetalert2/issues/2291\n    setTimeout(() => {\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\n      if ('MutationObserver' in window) {\n        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n        const textareaResizeHandler = () => {\n          const textareaWidth = textarea.offsetWidth + getMargin(textarea);\n          if (textareaWidth > initialPopupWidth) {\n            getPopup().style.width = `${textareaWidth}px`;\n          } else {\n            getPopup().style.width = null;\n          }\n        };\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n      }\n    });\n    return textarea;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContent = (instance, params) => {\n    const htmlContainer = getHtmlContainer();\n    if (!htmlContainer) {\n      return;\n    }\n    applyCustomClass(htmlContainer, params, 'htmlContainer');\n\n    // Content as HTML\n    if (params.html) {\n      parseHtmlToContainer(params.html, htmlContainer);\n      show(htmlContainer, 'block');\n    }\n\n    // Content as plain text\n    else if (params.text) {\n      htmlContainer.textContent = params.text;\n      show(htmlContainer, 'block');\n    }\n\n    // No content\n    else {\n      hide(htmlContainer);\n    }\n    renderInput(instance, params);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderFooter = (instance, params) => {\n    const footer = getFooter();\n    if (!footer) {\n      return;\n    }\n    toggle(footer, params.footer);\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    }\n\n    // Custom class\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderIcon = (instance, params) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    const icon = getIcon();\n\n    // if the given icon already rendered, apply the styling without re-rendering the icon\n    if (innerParams && params.icon === innerParams.icon) {\n      // Custom or default content\n      setContent(icon, params);\n      applyStyles(icon, params);\n      return;\n    }\n    if (!params.icon && !params.iconHtml) {\n      hide(icon);\n      return;\n    }\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n      error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`);\n      hide(icon);\n      return;\n    }\n    show(icon);\n\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n\n    // Animate icon\n    addClass(icon, params.showClass.icon);\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const applyStyles = (icon, params) => {\n    for (const iconType in iconTypes) {\n      if (params.icon !== iconType) {\n        removeClass(icon, iconTypes[iconType]);\n      }\n    }\n    addClass(icon, iconTypes[params.icon]);\n\n    // Icon color\n    setColor(icon, params);\n\n    // Success icon background color\n    adjustSuccessIconBackgroundColor();\n\n    // Custom class\n    applyCustomClass(icon, params, 'icon');\n  };\n\n  // Adjust success icon background color to match the popup background color\n  const adjustSuccessIconBackgroundColor = () => {\n    const popup = getPopup();\n    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    /** @type {NodeListOf<HTMLElement>} */\n    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n    for (let i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n  const successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`;\n  const errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`;\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setContent = (icon, params) => {\n    let oldContent = icon.innerHTML;\n    let newContent;\n    if (params.iconHtml) {\n      newContent = iconContent(params.iconHtml);\n    } else if (params.icon === 'success') {\n      newContent = successIconHtml;\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n    } else if (params.icon === 'error') {\n      newContent = errorIconHtml;\n    } else {\n      const defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      newContent = iconContent(defaultIconHtml[params.icon]);\n    }\n    if (oldContent.trim() !== newContent.trim()) {\n      setInnerHtml(icon, newContent);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setColor = (icon, params) => {\n    if (!params.iconColor) {\n      return;\n    }\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n\n  /**\n   * @param {string} content\n   * @returns {string}\n   */\n  const iconContent = content => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`;\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderImage = (instance, params) => {\n    const image = getImage();\n    if (!image) {\n      return;\n    }\n    if (!params.imageUrl) {\n      hide(image);\n      return;\n    }\n    show(image, '');\n\n    // Src, alt\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt || '');\n\n    // Width, height\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight);\n\n    // Class\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderPopup = (instance, params) => {\n    const container = getContainer();\n    const popup = getPopup();\n    if (!container || !popup) {\n      return;\n    }\n\n    // Width\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\n    if (params.toast) {\n      applyNumericalStyle(container, 'width', params.width);\n      popup.style.width = '100%';\n      const loader = getLoader();\n      loader && popup.insertBefore(loader, getIcon());\n    } else {\n      applyNumericalStyle(popup, 'width', params.width);\n    }\n\n    // Padding\n    applyNumericalStyle(popup, 'padding', params.padding);\n\n    // Color\n    if (params.color) {\n      popup.style.color = params.color;\n    }\n\n    // Background\n    if (params.background) {\n      popup.style.background = params.background;\n    }\n    hide(getValidationMessage());\n\n    // Classes\n    addClasses$1(popup, params);\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses$1 = (popup, params) => {\n    const showClass = params.showClass || {};\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = `${swalClasses.popup} ${isVisible$1(popup) ? showClass.popup : ''}`;\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    }\n\n    // Custom class\n    applyCustomClass(popup, params, 'popup');\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    }\n\n    // Icon class (#1842)\n    if (params.icon) {\n      addClass(popup, swalClasses[`icon-${params.icon}`]);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderProgressSteps = (instance, params) => {\n    const progressStepsContainer = getProgressSteps();\n    if (!progressStepsContainer) {\n      return;\n    }\n    const {\n      progressSteps,\n      currentProgressStep\n    } = params;\n    if (!progressSteps || progressSteps.length === 0 || currentProgressStep === undefined) {\n      hide(progressStepsContainer);\n      return;\n    }\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n    if (currentProgressStep >= progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    progressSteps.forEach((step, index) => {\n      const stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n      if (index === currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n      if (index !== progressSteps.length - 1) {\n        const lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n\n  /**\n   * @param {string} step\n   * @returns {HTMLLIElement}\n   */\n  const createStepElement = step => {\n    const stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLLIElement}\n   */\n  const createLineElement = params => {\n    const lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n    if (params.progressStepsDistance) {\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n    }\n    return lineEl;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderTitle = (instance, params) => {\n    const title = getTitle();\n    if (!title) {\n      return;\n    }\n    toggle(title, params.title || params.titleText, 'block');\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    }\n\n    // Custom class\n    applyCustomClass(title, params, 'title');\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const render = (instance, params) => {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderProgressSteps(instance, params);\n    renderIcon(instance, params);\n    renderImage(instance, params);\n    renderTitle(instance, params);\n    renderCloseButton(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n    const popup = getPopup();\n    if (typeof params.didRender === 'function' && popup) {\n      params.didRender(popup);\n    }\n  };\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n  const isVisible = () => {\n    return isVisible$1(getPopup());\n  };\n\n  /*\n   * Global function to click 'Confirm' button\n   */\n  const clickConfirm = () => getConfirmButton() && getConfirmButton().click();\n\n  /*\n   * Global function to click 'Deny' button\n   */\n  const clickDeny = () => getDenyButton() && getDenyButton().click();\n\n  /*\n   * Global function to click 'Cancel' button\n   */\n  const clickCancel = () => getCancelButton() && getCancelButton().click();\n\n  /** @typedef {'cancel' | 'backdrop' | 'close' | 'esc' | 'timer'} DismissReason */\n\n  /** @type {Record<DismissReason, DismissReason>} */\n  const DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  /**\n   * @param {GlobalState} globalState\n   */\n  const removeKeydownHandler = globalState => {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {*} dismissWith\n   */\n  const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n    removeKeydownHandler(globalState);\n    if (!innerParams.toast) {\n      globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  };\n\n  /**\n   * @param {number} index\n   * @param {number} increment\n   */\n  const setFocus = (index, increment) => {\n    const focusableElements = getFocusableElements();\n    // search for visible elements and select the next possible match\n    if (focusableElements.length) {\n      index = index + increment;\n\n      // rollover to first item\n      if (index === focusableElements.length) {\n        index = 0;\n\n        // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n      focusableElements[index].focus();\n      return;\n    }\n    // no visible focusable elements, focus the popup\n    getPopup().focus();\n  };\n  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\n  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {KeyboardEvent} event\n   * @param {Function} dismissWith\n   */\n  const keydownHandler = (instance, event, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    }\n\n    // Ignore keydown during IME composition\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n    // https://github.com/sweetalert2/sweetalert2/issues/720\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\n    if (event.isComposing || event.keyCode === 229) {\n      return;\n    }\n    if (innerParams.stopKeydownPropagation) {\n      event.stopPropagation();\n    }\n\n    // ENTER\n    if (event.key === 'Enter') {\n      handleEnter(instance, event, innerParams);\n    }\n\n    // TAB\n    else if (event.key === 'Tab') {\n      handleTab(event);\n    }\n\n    // ARROWS - switch focus between buttons\n    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {\n      handleArrows(event.key);\n    }\n\n    // ESC\n    else if (event.key === 'Escape') {\n      handleEsc(event, innerParams, dismissWith);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handleEnter = (instance, event, innerParams) => {\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return;\n    }\n    if (event.target && instance.getInput() && event.target instanceof HTMLElement && event.target.outerHTML === instance.getInput().outerHTML) {\n      if (['textarea', 'file'].includes(innerParams.input)) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   */\n  const handleTab = event => {\n    const targetElement = event.target;\n    const focusableElements = getFocusableElements();\n    let btnIndex = -1;\n    for (let i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    }\n\n    // Cycle to the next button\n    if (!event.shiftKey) {\n      setFocus(btnIndex, 1);\n    }\n\n    // Cycle to the prev button\n    else {\n      setFocus(btnIndex, -1);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * @param {string} key\n   */\n  const handleArrows = key => {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n    /** @type HTMLElement[] */\n    const buttons = [confirmButton, denyButton, cancelButton];\n    if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {\n      return;\n    }\n    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n    let buttonToFocus = document.activeElement;\n    for (let i = 0; i < getActions().children.length; i++) {\n      buttonToFocus = buttonToFocus[sibling];\n      if (!buttonToFocus) {\n        return;\n      }\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {\n        break;\n      }\n    }\n    if (buttonToFocus instanceof HTMLButtonElement) {\n      buttonToFocus.focus();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} event\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const handleEsc = (event, innerParams, dismissWith) => {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      event.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap(),\n    swalPromiseReject: new WeakMap()\n  };\n\n  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  const setAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el === getContainer() || el.contains(getContainer())) {\n        return;\n      }\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden') || '');\n      }\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  const unsetAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden') || '');\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  /* istanbul ignore file */\n\n  // Fix iOS scrolling http://stackoverflow.com/q/39626302\n\n  const iOSfix = () => {\n    const iOS =\n    // @ts-ignore\n    /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n      const offset = document.body.scrollTop;\n      document.body.style.top = `${offset * -1}px`;\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n      addBottomPaddingForTallPopups();\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1948\n   */\n  const addBottomPaddingForTallPopups = () => {\n    const ua = navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);\n    if (iOSSafari) {\n      const bottomPanelHeight = 44;\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\n        getContainer().style.paddingBottom = `${bottomPanelHeight}px`;\n      }\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\n   */\n  const lockBodyScroll = () => {\n    const container = getContainer();\n    let preventTouchMove;\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchstart = event => {\n      preventTouchMove = shouldPreventTouchMove(event);\n    };\n    /**\n     * @param {TouchEvent} event\n     */\n    container.ontouchmove = event => {\n      if (preventTouchMove) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n  };\n\n  /**\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const shouldPreventTouchMove = event => {\n    const target = event.target;\n    const container = getContainer();\n    if (isStylus(event) || isZoom(event)) {\n      return false;\n    }\n    if (target === container) {\n      return true;\n    }\n    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&\n    // #1603\n    target.tagName !== 'TEXTAREA' &&\n    // #2266\n    !(isScrollable(getHtmlContainer()) &&\n    // #1944\n    getHtmlContainer().contains(target))) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\n   *\n   * @param {*} event\n   * @returns {boolean}\n   */\n  const isStylus = event => {\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\n   *\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const isZoom = event => {\n    return event.touches && event.touches.length > 1;\n  };\n  const undoIOSfix = () => {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      const offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n\n  /**\n   * Measure scrollbar width for padding body during modal show/hide\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n   *\n   * @returns {number}\n   */\n  const measureScrollbar = () => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  /**\n   * Remember state in cases where opening and handling a modal will fiddle with it.\n   * @type {number | null}\n   */\n  let previousBodyPadding = null;\n  const fixScrollbar = () => {\n    // for queues, do not do this more than once\n    if (previousBodyPadding !== null) {\n      return;\n    }\n    // if the body has overflow\n    if (document.body.scrollHeight > window.innerHeight) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = `${previousBodyPadding + measureScrollbar()}px`;\n    }\n  };\n  const undoScrollbar = () => {\n    if (previousBodyPadding !== null) {\n      document.body.style.paddingRight = `${previousBodyPadding}px`;\n      previousBodyPadding = null;\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} container\n   * @param {boolean} returnFocus\n   * @param {Function} didClose\n   */\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\n    if (isToast()) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\n      removeKeydownHandler(globalState);\n    }\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    // workaround for #2088\n    // for some reason removing the container in Safari will scroll the document to bottom\n    if (isSafari) {\n      container.setAttribute('style', 'display:none !important');\n      container.removeAttribute('class');\n      container.innerHTML = '';\n    } else {\n      container.remove();\n    }\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n      unsetAriaHidden();\n    }\n    removeBodyClasses();\n  }\n\n  /**\n   * Remove SweetAlert2 classes from body\n   */\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n  }\n\n  /**\n   * Instance method to close sweetAlert\n   *\n   * @param {any} resolveValue\n   */\n  function close(resolveValue) {\n    resolveValue = prepareResolveValue(resolveValue);\n    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    const didClose = triggerClosePopup(this);\n    if (this.isAwaitingPromise) {\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n      if (!resolveValue.isDismissed) {\n        handleAwaitingPromise(this);\n        swalPromiseResolve(resolveValue);\n      }\n    } else if (didClose) {\n      // Resolve Swal promise\n      swalPromiseResolve(resolveValue);\n    }\n  }\n  const triggerClosePopup = instance => {\n    const popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return false;\n    }\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    const backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(instance, popup, innerParams);\n    return true;\n  };\n\n  /**\n   * @param {any} error\n   */\n  function rejectPromise(error) {\n    const rejectPromise = privateMethods.swalPromiseReject.get(this);\n    handleAwaitingPromise(this);\n    if (rejectPromise) {\n      // Reject Swal promise\n      rejectPromise(error);\n    }\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const handleAwaitingPromise = instance => {\n    if (instance.isAwaitingPromise) {\n      delete instance.isAwaitingPromise;\n      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n      if (!privateProps.innerParams.get(instance)) {\n        instance._destroy();\n      }\n    }\n  };\n\n  /**\n   * @param {any} resolveValue\n   * @returns {SweetAlertResult}\n   */\n  const prepareResolveValue = resolveValue => {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n    return Object.assign({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handlePopupAnimation = (instance, popup, innerParams) => {\n    const container = getContainer();\n    // If animation is supported, animate\n    const animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n    if (typeof innerParams.willClose === 'function') {\n      innerParams.willClose(popup);\n    }\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {HTMLElement} popup\n   * @param {HTMLElement} container\n   * @param {boolean} returnFocus\n   * @param {Function} didClose\n   */\n  const animatePopup = (instance, popup, container, returnFocus, didClose) => {\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {Function} didClose\n   */\n  const triggerDidCloseAndDispose = (instance, didClose) => {\n    setTimeout(() => {\n      if (typeof didClose === 'function') {\n        didClose.bind(instance.params)();\n      }\n      // instance might have been destroyed already\n      if (instance._destroy) {\n        instance._destroy();\n      }\n    });\n  };\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   *\n   * @param {HTMLButtonElement} [buttonToReplace]\n   */\n  const showLoading = buttonToReplace => {\n    let popup = getPopup();\n    if (!popup) {\n      new Swal(); // eslint-disable-line no-new\n    }\n\n    popup = getPopup();\n    const loader = getLoader();\n    if (isToast()) {\n      hide(getIcon());\n    } else {\n      replaceButton(popup, buttonToReplace);\n    }\n    show(loader);\n    popup.setAttribute('data-loading', 'true');\n    popup.setAttribute('aria-busy', 'true');\n    popup.focus();\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {HTMLButtonElement} [buttonToReplace]\n   */\n  const replaceButton = (popup, buttonToReplace) => {\n    const actions = getActions();\n    const loader = getLoader();\n    if (!buttonToReplace && isVisible$1(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n    show(actions);\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n    }\n    loader.parentNode.insertBefore(loader, buttonToReplace);\n    addClass([popup, actions], swalClasses.loading);\n  };\n\n  /**\n   * @typedef { string | number | boolean } InputValue\n   */\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptionsAndValue = (instance, params) => {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].includes(params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      showLoading(getConfirmButton());\n      handleInputValue(instance, params);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} innerParams\n   * @returns {string | number | File | FileList | null}\n   */\n  const getInputValue = (instance, innerParams) => {\n    const input = instance.getInput();\n    if (!input) {\n      return null;\n    }\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n      case 'radio':\n        return getRadioValue(input);\n      case 'file':\n        return getFileValue(input);\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {number}\n   */\n  const getCheckboxValue = input => input.checked ? 1 : 0;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {string | null}\n   */\n  const getRadioValue = input => input.checked ? input.value : null;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {FileList | File | null}\n   */\n  const getFileValue = input => input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptions = (instance, params) => {\n    const popup = getPopup();\n    /**\n     * @param {Record<string, any>} inputOptions\n     */\n    const processInputOptions = inputOptions => {\n      populateInputOptions[params.input](popup, formatInputOptions(inputOptions), params);\n    };\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading(getConfirmButton());\n      asPromise(params.inputOptions).then(inputOptions => {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (typeof params.inputOptions === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(`Unexpected type of inputOptions! Expected object, Map or Promise, got ${typeof params.inputOptions}`);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputValue = (instance, params) => {\n    const input = instance.getInput();\n    hide(input);\n    asPromise(params.inputValue).then(inputValue => {\n      input.value = params.input === 'number' ? `${parseFloat(inputValue) || 0}` : `${inputValue}`;\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    }).catch(err => {\n      error(`Error in inputValue promise: ${err}`);\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n  const populateInputOptions = {\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    select: (popup, inputOptions, params) => {\n      const select = getDirectChildByClass(popup, swalClasses.select);\n      /**\n       * @param {HTMLElement} parent\n       * @param {string} optionLabel\n       * @param {string} optionValue\n       */\n      const renderOption = (parent, optionLabel, optionValue) => {\n        const option = document.createElement('option');\n        option.value = optionValue;\n        setInnerHtml(option, optionLabel);\n        option.selected = isSelected(optionValue, params.inputValue);\n        parent.appendChild(option);\n      };\n      inputOptions.forEach(inputOption => {\n        const optionValue = inputOption[0];\n        const optionLabel = inputOption[1];\n        // <optgroup> spec:\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n        // check whether this is a <optgroup>\n        if (Array.isArray(optionLabel)) {\n          // if it is an array, then it is an <optgroup>\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = optionValue;\n          optgroup.disabled = false; // not configurable for now\n          select.appendChild(optgroup);\n          optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));\n        } else {\n          // case of <option>\n          renderOption(select, optionLabel, optionValue);\n        }\n      });\n      select.focus();\n    },\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    radio: (popup, inputOptions, params) => {\n      const radio = getDirectChildByClass(popup, swalClasses.radio);\n      inputOptions.forEach(inputOption => {\n        const radioValue = inputOption[0];\n        const radioLabel = inputOption[1];\n        const radioInput = document.createElement('input');\n        const radioLabelElement = document.createElement('label');\n        radioInput.type = 'radio';\n        radioInput.name = swalClasses.radio;\n        radioInput.value = radioValue;\n        if (isSelected(radioValue, params.inputValue)) {\n          radioInput.checked = true;\n        }\n        const label = document.createElement('span');\n        setInnerHtml(label, radioLabel);\n        label.className = swalClasses.label;\n        radioLabelElement.appendChild(radioInput);\n        radioLabelElement.appendChild(label);\n        radio.appendChild(radioLabelElement);\n      });\n      const radios = radio.querySelectorAll('input');\n      if (radios.length) {\n        radios[0].focus();\n      }\n    }\n  };\n\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   *\n   * @param {Record<string, any>} inputOptions\n   * @returns {Array<Array<string>>}\n   */\n  const formatInputOptions = inputOptions => {\n    const result = [];\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n      inputOptions.forEach((value, key) => {\n        let valueFormatted = value;\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(key => {\n        let valueFormatted = inputOptions[key];\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} optionValue\n   * @param {InputValue | Promise<InputValue> | { toPromise: () => InputValue }} inputValue\n   * @returns {boolean}\n   */\n  const isSelected = (optionValue, inputValue) => {\n    return inputValue && inputValue.toString() === optionValue.toString();\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const handleConfirmButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, 'confirm');\n    } else {\n      confirm(instance, true);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const handleDenyButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, 'deny');\n    } else {\n      deny(instance, false);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {Function} dismissWith\n   */\n  const handleCancelButtonClick = (instance, dismissWith) => {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleConfirmOrDenyWithInput = (instance, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams.input) {\n      error(`The \"input\" parameter is needed to be set when using returnInputValueOn${capitalizeFirstLetter(type)}`);\n      return;\n    }\n    const inputValue = getInputValue(instance, innerParams);\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, inputValue, type);\n    } else if (!instance.getInput().checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, inputValue);\n    } else {\n      confirm(instance, inputValue);\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {string | number | File | FileList | null} inputValue\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleInputValidator = (instance, inputValue, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableInput();\n    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));\n    validationPromise.then(validationMessage => {\n      instance.enableButtons();\n      instance.enableInput();\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else if (type === 'deny') {\n        deny(instance, inputValue);\n      } else {\n        confirm(instance, inputValue);\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  const deny = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnDeny) {\n      showLoading(getDenyButton());\n    }\n    if (innerParams.preDeny) {\n      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\n      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));\n      preDenyPromise.then(preDenyValue => {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          instance.close({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      instance.close({\n        isDenied: true,\n        value\n      });\n    }\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  const succeedWith = (instance, value) => {\n    instance.close({\n      isConfirmed: true,\n      value\n    });\n  };\n\n  /**\n   *\n   * @param {SweetAlert} instance\n   * @param {string} error\n   */\n  const rejectWith = (instance, error) => {\n    instance.rejectPromise(error);\n  };\n\n  /**\n   *\n   * @param {SweetAlert} instance\n   * @param {any} value\n   */\n  const confirm = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading();\n    }\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\n      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));\n      preConfirmPromise.then(preConfirmValue => {\n        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n  function hideLoading() {\n    // do nothing if popup is closed\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      return;\n    }\n    const domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n    if (isToast()) {\n      if (innerParams.icon) {\n        show(getIcon());\n      }\n    } else {\n      showRelatedButton(domCache);\n    }\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n  const showRelatedButton = domCache => {\n    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n  };\n\n  /**\n   * Gets the input DOM node, this method works with input parameter.\n   *\n   * @returns {HTMLInputElement | null}\n   */\n  function getInput() {\n    const innerParams = privateProps.innerParams.get(this);\n    const domCache = privateProps.domCache.get(this);\n    if (!domCache) {\n      return null;\n    }\n    return getInput$1(domCache.popup, innerParams.input);\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {string[]} buttons\n   * @param {boolean} disabled\n   */\n  function setButtonsDisabled(instance, buttons, disabled) {\n    const domCache = privateProps.domCache.get(instance);\n    buttons.forEach(button => {\n      domCache[button].disabled = disabled;\n    });\n  }\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {boolean} disabled\n   */\n  function setInputDisabled(input, disabled) {\n    if (!input) {\n      return;\n    }\n    if (input.type === 'radio') {\n      const radiosContainer = input.parentNode.parentNode;\n      const radios = radiosContainer.querySelectorAll('input');\n      for (let i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n\n  /**\n   * Enable all the buttons\n   */\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n\n  /**\n   * Disable all the buttons\n   */\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n\n  /**\n   * Enable the input field\n   */\n  function enableInput() {\n    setInputDisabled(this.getInput(), false);\n  }\n\n  /**\n   * Disable the input field\n   */\n  function disableInput() {\n    setInputDisabled(this.getInput(), true);\n  }\n\n  /**\n   * Show block with validation message\n   *\n   * @param {string} error\n   */\n  function showValidationMessage(error) {\n    const domCache = privateProps.domCache.get(this);\n    const params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n    show(domCache.validationMessage);\n    const input = this.getInput();\n    if (input) {\n      input.setAttribute('aria-invalid', true);\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  }\n\n  /**\n   * Hide block with validation message\n   */\n  function resetValidationMessage() {\n    const domCache = privateProps.domCache.get(this);\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n    const input = this.getInput();\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedby');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n\n  const defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    color: undefined,\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    returnFocus: true,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    showLoaderOnDeny: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoFocus: true,\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    didRender: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n\n  /** @type {Record<string, string>} */\n  const deprecatedParams = {};\n  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\n\n  /**\n   * Is valid parameter\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isValidParameter = paramName => {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n\n  /**\n   * Is valid parameter for Swal.update() method\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isUpdatableParameter = paramName => {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n\n  /**\n   * Is deprecated parameter\n   *\n   * @param {string} paramName\n   * @returns {string | undefined}\n   */\n  const isDeprecatedParameter = paramName => {\n    return deprecatedParams[paramName];\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsValid = param => {\n    if (!isValidParameter(param)) {\n      warn(`Unknown parameter \"${param}\"`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfToastParamIsValid = param => {\n    if (toastIncompatibleParams.includes(param)) {\n      warn(`The parameter \"${param}\" is incompatible with toasts`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsDeprecated = param => {\n    const isDeprecated = isDeprecatedParameter(param);\n    if (isDeprecated) {\n      warnAboutDeprecation(param, isDeprecated);\n    }\n  };\n\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const showWarningsForParams = params => {\n    if (params.backdrop === false && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n    for (const param in params) {\n      checkIfParamIsValid(param);\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function update(params) {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(this);\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      warn(`You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.`);\n      return;\n    }\n    const validUpdatableParams = filterValidParams(params);\n    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: Object.assign({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const filterValidParams = params => {\n    const validUpdatableParams = {};\n    Object.keys(params).forEach(param => {\n      if (isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(`Invalid parameter to update: ${param}`);\n      }\n    });\n    return validUpdatableParams;\n  };\n\n  /**\n   * Dispose the current SweetAlert2 instance\n   */\n  function _destroy() {\n    const domCache = privateProps.domCache.get(this);\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\n      return; // This instance has already been destroyed\n    }\n\n    // Check if there is another Swal closing\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    }\n    disposeSwal(this);\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const disposeSwal = instance => {\n    disposeWeakMaps(instance);\n    // Unset this.params so GC will dispose it (#1569)\n    delete instance.params;\n    // Unset globalState props so GC will dispose globalState (#1569)\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget;\n    // Unset currentInstance\n    delete globalState.currentInstance;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   */\n  const disposeWeakMaps = instance => {\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\n    if (instance.isAwaitingPromise) {\n      unsetWeakMaps(privateProps, instance);\n      instance.isAwaitingPromise = true;\n    } else {\n      unsetWeakMaps(privateMethods, instance);\n      unsetWeakMaps(privateProps, instance);\n      delete instance.isAwaitingPromise;\n      // Unset instance methods\n      delete instance.disableButtons;\n      delete instance.enableButtons;\n      delete instance.getInput;\n      delete instance.disableInput;\n      delete instance.enableInput;\n      delete instance.hideLoading;\n      delete instance.disableLoading;\n      delete instance.showValidationMessage;\n      delete instance.resetValidationMessage;\n      delete instance.close;\n      delete instance.closePopup;\n      delete instance.closeModal;\n      delete instance.closeToast;\n      delete instance.rejectPromise;\n      delete instance.update;\n      delete instance._destroy;\n    }\n  };\n\n  /**\n   * @param {object} obj\n   * @param {SweetAlert} instance\n   */\n  const unsetWeakMaps = (obj, instance) => {\n    for (const i in obj) {\n      obj[i].delete(instance);\n    }\n  };\n\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _destroy: _destroy,\n    close: close,\n    closeModal: close,\n    closePopup: close,\n    closeToast: close,\n    disableButtons: disableButtons,\n    disableInput: disableInput,\n    disableLoading: hideLoading,\n    enableButtons: enableButtons,\n    enableInput: enableInput,\n    getInput: getInput,\n    handleAwaitingPromise: handleAwaitingPromise,\n    hideLoading: hideLoading,\n    rejectPromise: rejectPromise,\n    resetValidationMessage: resetValidationMessage,\n    showValidationMessage: showValidationMessage,\n    update: update\n  });\n\n  const handlePopupClick = (instance, domCache, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (innerParams.toast) {\n      handleToastClick(instance, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache);\n\n      // Ignore click events that had mousedown on the container but mouseup on the popup\n      handleContainerMousedown(domCache);\n      handleModalClick(instance, domCache, dismissWith);\n    }\n  };\n  const handleToastClick = (instance, domCache, dismissWith) => {\n    // Closing toast by internal click\n    domCache.popup.onclick = () => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n        return;\n      }\n      dismissWith(DismissReason.close);\n    };\n  };\n\n  /**\n   * @param {*} innerParams\n   * @returns {boolean}\n   */\n  const isAnyButtonShown = innerParams => {\n    return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n  };\n  let ignoreOutsideClick = false;\n  const handleModalMousedown = domCache => {\n    domCache.popup.onmousedown = () => {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = undefined;\n        // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleContainerMousedown = domCache => {\n    domCache.container.onmousedown = () => {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = undefined;\n        // We also need to check if the mouseup target is a child of the popup\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleModalClick = (instance, domCache, dismissWith) => {\n    domCache.container.onclick = e => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n\n  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\n  const isElement = elem => elem instanceof Element || isJqueryElement(elem);\n  const argsToParams = args => {\n    const params = {};\n    if (typeof args[0] === 'object' && !isElement(args[0])) {\n      Object.assign(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach((name, index) => {\n        const arg = args[index];\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(`Unexpected type of ${name}! Expected \"string\" or \"Element\", got ${typeof arg}`);\n        }\n      });\n    }\n    return params;\n  };\n\n  /**\n   * Main method to create a new SweetAlert2 popup\n   *\n   * @param  {...SweetAlertOptions} args\n   * @returns {Promise<SweetAlertResult>}\n   */\n  function fire() {\n    const Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new Swal(...args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlert}\n   */\n  function mixin(mixinParams) {\n    class MixinSwal extends this {\n      _main(params, priorityMixinParams) {\n        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\n      }\n    }\n    // @ts-ignore\n    return MixinSwal;\n  }\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const getTimerLeft = () => {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const stopTimer = () => {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const resumeTimer = () => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const toggleTimer = () => {\n    const timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @param {number} n\n   * @returns {number | undefined}\n   */\n  const increaseTimer = n => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.increase(n);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   *\n   * @returns {boolean}\n   */\n  const isTimerRunning = () => {\n    return !!(globalState.timeout && globalState.timeout.isRunning());\n  };\n\n  let bodyClickListenerAdded = false;\n  const clickHandlers = {};\n\n  /**\n   * @param {string} attr\n   */\n  function bindClickHandler() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n  const bodyClickListener = event => {\n    for (let el = event.target; el && el !== document; el = el.parentNode) {\n      for (const attr in clickHandlers) {\n        const template = el.getAttribute(attr);\n        if (template) {\n          clickHandlers[attr].fire({\n            template\n          });\n          return;\n        }\n      }\n    }\n  };\n\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    argsToParams: argsToParams,\n    bindClickHandler: bindClickHandler,\n    clickCancel: clickCancel,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    enableLoading: showLoading,\n    fire: fire,\n    getActions: getActions,\n    getCancelButton: getCancelButton,\n    getCloseButton: getCloseButton,\n    getConfirmButton: getConfirmButton,\n    getContainer: getContainer,\n    getDenyButton: getDenyButton,\n    getFocusableElements: getFocusableElements,\n    getFooter: getFooter,\n    getHtmlContainer: getHtmlContainer,\n    getIcon: getIcon,\n    getIconContent: getIconContent,\n    getImage: getImage,\n    getInputLabel: getInputLabel,\n    getLoader: getLoader,\n    getPopup: getPopup,\n    getProgressSteps: getProgressSteps,\n    getTimerLeft: getTimerLeft,\n    getTimerProgressBar: getTimerProgressBar,\n    getTitle: getTitle,\n    getValidationMessage: getValidationMessage,\n    increaseTimer: increaseTimer,\n    isDeprecatedParameter: isDeprecatedParameter,\n    isLoading: isLoading,\n    isTimerRunning: isTimerRunning,\n    isUpdatableParameter: isUpdatableParameter,\n    isValidParameter: isValidParameter,\n    isVisible: isVisible,\n    mixin: mixin,\n    resumeTimer: resumeTimer,\n    showLoading: showLoading,\n    stopTimer: stopTimer,\n    toggleTimer: toggleTimer\n  });\n\n  class Timer {\n    /**\n     * @param {Function} callback\n     * @param {number} delay\n     */\n    constructor(callback, delay) {\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n\n    /**\n     * @returns {number}\n     */\n    start() {\n      if (!this.running) {\n        this.running = true;\n        this.started = new Date();\n        this.id = setTimeout(this.callback, this.remaining);\n      }\n      return this.remaining;\n    }\n\n    /**\n     * @returns {number}\n     */\n    stop() {\n      if (this.started && this.running) {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date().getTime() - this.started.getTime();\n      }\n      return this.remaining;\n    }\n\n    /**\n     * @param {number} n\n     * @returns {number}\n     */\n    increase(n) {\n      const running = this.running;\n      if (running) {\n        this.stop();\n      }\n      this.remaining += n;\n      if (running) {\n        this.start();\n      }\n      return this.remaining;\n    }\n\n    /**\n     * @returns {number}\n     */\n    getTimerLeft() {\n      if (this.running) {\n        this.stop();\n        this.start();\n      }\n      return this.remaining;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isRunning() {\n      return this.running;\n    }\n  }\n\n  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const getTemplateParams = params => {\n    /** @type {HTMLTemplateElement} */\n    const template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n    if (!template) {\n      return {};\n    }\n    /** @type {DocumentFragment} */\n    const templateContent = template.content;\n    showWarningsForElements(templateContent);\n    const result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalParams = Array.from(templateContent.querySelectorAll('swal-param'));\n    swalParams.forEach(param => {\n      showWarningsForAttributes(param, ['name', 'value']);\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      if (typeof defaultParams[paramName] === 'boolean') {\n        result[paramName] = value !== 'false';\n      } else if (typeof defaultParams[paramName] === 'object') {\n        result[paramName] = JSON.parse(value);\n      } else {\n        result[paramName] = value;\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalFunctionParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));\n    swalFunctions.forEach(param => {\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      result[paramName] = new Function(`return ${value}`)();\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalButtons = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));\n    swalButtons.forEach(button => {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      const type = button.getAttribute('type');\n      result[`${type}ButtonText`] = button.innerHTML;\n      result[`show${capitalizeFirstLetter(type)}Button`] = true;\n      if (button.hasAttribute('color')) {\n        result[`${type}ButtonColor`] = button.getAttribute('color');\n      }\n      if (button.hasAttribute('aria-label')) {\n        result[`${type}ButtonAriaLabel`] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalImage = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const image = templateContent.querySelector('swal-image');\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalIcon = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const icon = templateContent.querySelector('swal-icon');\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n      if (icon.hasAttribute('type')) {\n        /** @type {SweetAlertIcon} */\n        // @ts-ignore\n        result.icon = icon.getAttribute('type');\n      }\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n      result.iconHtml = icon.innerHTML;\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalInput = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const input = templateContent.querySelector('swal-input');\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      /** @type {SweetAlertInput} */\n      // @ts-ignore\n      result.input = input.getAttribute('type') || 'text';\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n    /** @type {HTMLElement[]} */\n    const inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      inputOptions.forEach(option => {\n        showWarningsForAttributes(option, ['value']);\n        const optionValue = option.getAttribute('value');\n        const optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @param {string[]} paramNames\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalStringParams = (templateContent, paramNames) => {\n    const result = {};\n    for (const i in paramNames) {\n      const paramName = paramNames[i];\n      /** @type {HTMLElement} */\n      const tag = templateContent.querySelector(paramName);\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   */\n  const showWarningsForElements = templateContent => {\n    const allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    Array.from(templateContent.children).forEach(el => {\n      const tagName = el.tagName.toLowerCase();\n      if (!allowedElements.includes(tagName)) {\n        warn(`Unrecognized element <${tagName}>`);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} el\n   * @param {string[]} allowedAttributes\n   */\n  const showWarningsForAttributes = (el, allowedAttributes) => {\n    Array.from(el.attributes).forEach(attribute => {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([`Unrecognized attribute \"${attribute.name}\" on <${el.tagName.toLowerCase()}>.`, `${allowedAttributes.length ? `Allowed attributes are: ${allowedAttributes.join(', ')}` : 'To set the value, use HTML within the element.'}`]);\n      }\n    });\n  };\n\n  const SHOW_CLASS_TIMEOUT = 10;\n\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const openPopup = params => {\n    const container = getContainer();\n    const popup = getPopup();\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    }\n    const bodyStyles = window.getComputedStyle(document.body);\n    const initialBodyOverflow = bodyStyles.overflowY;\n    addClasses(container, popup, params);\n\n    // scrolling is 'hidden' until animation is done, after that 'auto'\n    setTimeout(() => {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n    if (typeof params.didOpen === 'function') {\n      setTimeout(() => params.didOpen(popup));\n    }\n    removeClass(container, swalClasses['no-transition']);\n  };\n\n  /**\n   * @param {AnimationEvent} event\n   */\n  const swalOpenAnimationFinished = event => {\n    const popup = getPopup();\n    if (event.target !== popup) {\n      return;\n    }\n    const container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   */\n  const setScrollingVisibility = (container, popup) => {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {boolean} scrollbarPadding\n   * @param {string} initialBodyOverflow\n   */\n  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {\n    iOSfix();\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      fixScrollbar();\n    }\n\n    // sweetalert2/issues/1247\n    setTimeout(() => {\n      container.scrollTop = 0;\n    });\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses = (container, popup, params) => {\n    addClass(container, params.showClass.backdrop);\n    // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\n    popup.style.setProperty('opacity', '0', 'important');\n    show(popup, 'grid');\n    setTimeout(() => {\n      // Animate popup right after showing it\n      addClass(popup, params.showClass.popup);\n      // and remove the opacity workaround\n      popup.style.removeProperty('opacity');\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n\n    addClass([document.documentElement, document.body], swalClasses.shown);\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n\n  var defaultInputValidators = {\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    email: (string, validationMessage) => {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    url: (string, validationMessage) => {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (!params.inputValidator) {\n      Object.keys(defaultInputValidators).forEach(key => {\n        if (params.input === key) {\n          params.inputValidator = defaultInputValidators[key];\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function setParameters(params) {\n    setDefaultInputValidators(params);\n\n    // showLoaderOnConfirm && preConfirm\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    }\n    validateCustomTargetElement(params);\n\n    // Replace newlines with <br> in title\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n    init(params);\n  }\n\n  /** @type {SweetAlert} */\n  let currentInstance;\n  class SweetAlert {\n    /**\n     * @param {...any} args\n     * @this {SweetAlert}\n     */\n    constructor() {\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      }\n      currentInstance = this;\n\n      // @ts-ignore\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const outerParams = Object.freeze(this.constructor.argsToParams(args));\n\n      /** @type {Readonly<SweetAlertOptions>} */\n      this.params = outerParams;\n\n      /** @type {boolean} */\n      this.isAwaitingPromise = false;\n      const promise = currentInstance._main(currentInstance.params);\n      privateProps.promise.set(this, promise);\n    }\n    _main(userParams) {\n      let mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      showWarningsForParams(Object.assign({}, mixinParams, userParams));\n      if (globalState.currentInstance) {\n        globalState.currentInstance._destroy();\n        if (isModal()) {\n          unsetAriaHidden();\n        }\n      }\n      globalState.currentInstance = currentInstance;\n      const innerParams = prepareParams(userParams, mixinParams);\n      setParameters(innerParams);\n      Object.freeze(innerParams);\n\n      // clear the previous timer\n      if (globalState.timeout) {\n        globalState.timeout.stop();\n        delete globalState.timeout;\n      }\n\n      // clear the restore focus timeout\n      clearTimeout(globalState.restoreFocusTimeout);\n      const domCache = populateDomCache(currentInstance);\n      render(currentInstance, innerParams);\n      privateProps.innerParams.set(currentInstance, innerParams);\n      return swalPromise(currentInstance, domCache, innerParams);\n    }\n\n    // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n    then(onFulfilled) {\n      const promise = privateProps.promise.get(this);\n      return promise.then(onFulfilled);\n    }\n    finally(onFinally) {\n      const promise = privateProps.promise.get(this);\n      return promise.finally(onFinally);\n    }\n  }\n\n  /**\n   * @param {SweetAlert} instance\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {Promise}\n   */\n  const swalPromise = (instance, domCache, innerParams) => {\n    return new Promise((resolve, reject) => {\n      // functions to handle all closings/dismissals\n      /**\n       * @param {DismissReason} dismiss\n       */\n      const dismissWith = dismiss => {\n        instance.close({\n          isDismissed: true,\n          dismiss\n        });\n      };\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n      privateMethods.swalPromiseReject.set(instance, reject);\n      domCache.confirmButton.onclick = () => {\n        handleConfirmButtonClick(instance);\n      };\n      domCache.denyButton.onclick = () => {\n        handleDenyButtonClick(instance);\n      };\n      domCache.cancelButton.onclick = () => {\n        handleCancelButtonClick(instance, dismissWith);\n      };\n      domCache.closeButton.onclick = () => {\n        dismissWith(DismissReason.close);\n      };\n      handlePopupClick(instance, domCache, dismissWith);\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams);\n\n      // Scroll container to top on open (#1247, #1946)\n      setTimeout(() => {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n\n  /**\n   * @param {SweetAlertOptions} userParams\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlertOptions}\n   */\n  const prepareParams = (userParams, mixinParams) => {\n    const templateParams = getTemplateParams(userParams);\n    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n    return params;\n  };\n\n  /**\n   * @param {SweetAlert} instance\n   * @returns {DomCache}\n   */\n  const populateDomCache = instance => {\n    const domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const setupTimer = (globalState, innerParams, dismissWith) => {\n    const timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n    if (innerParams.timer) {\n      globalState.timeout = new Timer(() => {\n        dismissWith('timer');\n        delete globalState.timeout;\n      }, innerParams.timer);\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n        setTimeout(() => {\n          if (globalState.timeout && globalState.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   */\n  const initFocus = (domCache, innerParams) => {\n    if (innerParams.toast) {\n      return;\n    }\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      blurActiveElement();\n      return;\n    }\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(-1, 1);\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n  const focusButton = (domCache, innerParams) => {\n    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n    return false;\n  };\n  const blurActiveElement = () => {\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  };\n\n  // Dear russian users visiting russian sites. Let's have fun.\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|by|xn--p1ai)$/)) {\n    const now = new Date();\n    const initiationDate = localStorage.getItem('swal-initiation');\n    if (!initiationDate) {\n      localStorage.setItem('swal-initiation', `${now}`);\n    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {\n      setTimeout(() => {\n        document.body.style.pointerEvents = 'none';\n        const ukrainianAnthem = document.createElement('audio');\n        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';\n        ukrainianAnthem.loop = true;\n        document.body.appendChild(ukrainianAnthem);\n        setTimeout(() => {\n          ukrainianAnthem.play().catch(() => {\n            // ignore\n          });\n        }, 2500);\n      }, 500);\n    }\n  }\n\n  // Assign instance methods from src/instanceMethods/*.js to prototype\n  SweetAlert.prototype.disableButtons = disableButtons;\n  SweetAlert.prototype.enableButtons = enableButtons;\n  SweetAlert.prototype.getInput = getInput;\n  SweetAlert.prototype.disableInput = disableInput;\n  SweetAlert.prototype.enableInput = enableInput;\n  SweetAlert.prototype.hideLoading = hideLoading;\n  SweetAlert.prototype.disableLoading = hideLoading;\n  SweetAlert.prototype.showValidationMessage = showValidationMessage;\n  SweetAlert.prototype.resetValidationMessage = resetValidationMessage;\n  SweetAlert.prototype.close = close;\n  SweetAlert.prototype.closePopup = close;\n  SweetAlert.prototype.closeModal = close;\n  SweetAlert.prototype.closeToast = close;\n  SweetAlert.prototype.rejectPromise = rejectPromise;\n  SweetAlert.prototype.update = update;\n  SweetAlert.prototype._destroy = _destroy;\n\n  // Assign static methods from src/staticMethods/*.js to constructor\n  Object.assign(SweetAlert, staticMethods);\n\n  // Proxy to instance methods to constructor, for now, for backwards compatibility\n  Object.keys(instanceMethods).forEach(key => {\n    /**\n     * @param {...any} args\n     * @returns {any | undefined}\n     */\n    SweetAlert[key] = function () {\n      if (currentInstance && currentInstance[key]) {\n        return currentInstance[key](...arguments);\n      }\n      return null;\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '11.7.12';\n\n  const Swal = SweetAlert;\n  // @ts-ignore\n  Swal.default = Swal;\n\n  return Swal;\n\n}));\nif (typeof this !== 'undefined' && this.Sweetalert2){this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\n",null,null],"names":["module","exports","RESTORE_FOCUS_TIMEOUT","globalState","focusPreviousActiveElement","previousActiveElement","HTMLElement","focus","document","body","restoreActiveElement","returnFocus","Promise","resolve","x","window","scrollX","y","scrollY","restoreFocusTimeout","setTimeout","scrollTo","privateProps","promise","WeakMap","innerParams","domCache","swalPrefix","swalClasses","reduce","acc","className","iconTypes","icon","consolePrefix","capitalizeFirstLetter","str","charAt","toUpperCase","slice","warn","message","console","join","error","previousWarnOnceMessages","warnOnce","includes","push","warnAboutDeprecation","deprecatedParam","useInstead","callIfFunction","arg","hasToPromiseFn","toPromise","asPromise","isPromise","getContainer","querySelector","container","elementBySelector","selectorString","elementByClass","getPopup","popup","getIcon","getIconContent","getTitle","title","getHtmlContainer","getImage","image","getProgressSteps","getValidationMessage","getConfirmButton","actions","confirm","getCancelButton","cancel","getDenyButton","deny","getInputLabel","getLoader","loader","getActions","getFooter","footer","getTimerProgressBar","getCloseButton","close","focusable","getFocusableElements","focusableElementsWithTabindex","querySelectorAll","focusableElementsWithTabindexSorted","Array","from","sort","a","b","tabindexA","parseInt","getAttribute","tabindexB","otherFocusableElements","otherFocusableElementsFiltered","filter","el","Set","concat","isVisible$1","isModal","hasClass","shown","isToast","toast","isLoading","hasAttribute","setInnerHtml","elem","html","textContent","parsed","DOMParser","parseFromString","childNodes","forEach","child","appendChild","HTMLVideoElement","HTMLAudioElement","cloneNode","classList","split","i","length","contains","removeCustomClasses","params","Object","values","showClass","remove","applyCustomClass","customClass","addClass","getInput$1","inputClass","checkbox","radio","range","input","focusInput","type","val","value","toggleClass","target","condition","Boolean","isArray","add","removeClass","getDirectChildByClass","children","applyNumericalStyle","property","style","removeProperty","show","display","arguments","undefined","hide","setStyle","parent","selector","toggle","offsetWidth","offsetHeight","getClientRects","allButtonsAreHidden","isScrollable","scrollHeight","clientHeight","hasCssAnimation","getComputedStyle","animDuration","parseFloat","getPropertyValue","transDuration","animateTimerProgressBar","timer","reset","timerProgressBar","transition","width","stopTimerProgressBar","timerProgressBarWidth","timerProgressBarPercent","isNodeEnv","sweetHTML","file","select","label","textarea","replace","resetOldContainer","oldContainer","documentElement","resetValidationMessage$1","currentInstance","resetValidationMessage","addInputChangeListeners","rangeOutput","oninput","onchange","getTarget","setupAccessibility","setAttribute","setupRTL","targetElement","direction","rtl","init","oldContainerExisted","createElement","parseHtmlToContainer","param","handleObject","jquery","handleJqueryElem","toString","animationEndEvent","testEl","transEndEventNames","WebkitAnimation","animation","prototype","hasOwnProperty","call","renderActions","instance","showConfirmButton","showDenyButton","showCancelButton","renderButtons","loaderHtml","confirmButton","denyButton","cancelButton","renderButton","handleButtonsStyling","reverseButtons","insertBefore","buttonsStyling","styled","confirmButtonColor","backgroundColor","denyButtonColor","cancelButtonColor","button","buttonType","renderCloseButton","closeButton","closeButtonHtml","showCloseButton","closeButtonAriaLabel","renderContainer","handleBackdropParam","backdrop","handlePositionParam","position","handleGrowParam","grow","background","center","growClass","inputClasses","renderInput","get","rerender","inputContainer","setAttributes","inputAttributes","showInput","setCustomClass","renderInputType","getInputContainer","inputAutoFocus","removeAttributes","attributes","attrName","name","removeAttribute","attr","setInputPlaceholder","placeholder","inputPlaceholder","setInputLabel","prependTo","inputLabel","id","labelClass","innerText","insertAdjacentElement","inputType","checkAndSetInputValue","inputValue","text","email","password","number","tel","url","rangeInput","disabled","selected","checkboxContainer","checked","getMargin","marginLeft","marginRight","initialPopupWidth","MutationObserver","textareaWidth","observe","attributeFilter","renderContent","htmlContainer","renderFooter","renderIcon","setContent","applyStyles","iconHtml","keys","indexOf","iconType","setColor","adjustSuccessIconBackgroundColor","popupBackgroundColor","successIconParts","successIconHtml","errorIconHtml","newContent","oldContent","innerHTML","iconContent","question","warning","info","trim","iconColor","color","borderColor","sel","content","renderImage","imageUrl","imageAlt","imageWidth","imageHeight","renderPopup","padding","addClasses$1","modal","renderProgressSteps","progressStepsContainer","progressSteps","currentProgressStep","step","index","stepEl","createStepElement","lineEl","createLineElement","progressStepsDistance","renderTitle","titleText","render","didRender","isVisible","clickConfirm","click","clickDeny","clickCancel","DismissReason","freeze","esc","removeKeydownHandler","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","addKeydownHandler","dismissWith","e","addEventListener","setFocus","increment","focusableElements","arrowKeysNextButton","arrowKeysPreviousButton","event","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","handleArrows","handleEsc","allowEnterKey","getInput","outerHTML","preventDefault","btnIndex","shiftKey","buttons","activeElement","sibling","buttonToFocus","HTMLButtonElement","allowEscapeKey","privateMethods","swalPromiseResolve","swalPromiseReject","setAriaHidden","unsetAriaHidden","iOSfix","test","navigator","userAgent","MSStream","platform","maxTouchPoints","iosfix","offset","scrollTop","top","lockBodyScroll","addBottomPaddingForTallPopups","ua","iOS","match","webkit","bottomPanelHeight","innerHeight","paddingBottom","preventTouchMove","ontouchstart","shouldPreventTouchMove","ontouchmove","isStylus","isZoom","tagName","touches","touchType","undoIOSfix","measureScrollbar","scrollDiv","scrollbarWidth","getBoundingClientRect","clientWidth","removeChild","previousBodyPadding","fixScrollbar","paddingRight","undoScrollbar","removePopupAndResetState","didClose","triggerDidCloseAndDispose","then","removeBodyClasses","resolveValue","prepareResolveValue","this","triggerClosePopup","isAwaitingPromise","isDismissed","handleAwaitingPromise","hideClass","handlePopupAnimation","rejectPromise","_destroy","isConfirmed","isDenied","assign","animationIsSupported","willClose","animatePopup","swalCloseEventFinishedCallback","bind","showLoading","buttonToReplace","Swal","replaceButton","parentNode","loading","handleInputOptionsAndValue","handleInputOptions","handleInputValue","getInputValue","getCheckboxValue","getRadioValue","getFileValue","inputAutoTrim","files","processInputOptions","inputOptions","populateInputOptions","formatInputOptions","hideLoading","catch","err","renderOption","optionLabel","optionValue","option","isSelected","inputOption","optgroup","o","radioValue","radioLabel","radioInput","radioLabelElement","radios","result","Map","valueFormatted","handleConfirmButtonClick","disableButtons","handleConfirmOrDenyWithInput","handleDenyButtonClick","returnInputValueOnDeny","handleCancelButtonClick","inputValidator","handleInputValidator","checkValidity","enableButtons","showValidationMessage","validationMessage","disableInput","enableInput","showLoaderOnDeny","preDeny","preDenyValue","rejectWith","succeedWith","showLoaderOnConfirm","preConfirm","preConfirmValue","showRelatedButton","getElementsByClassName","setButtonsDisabled","setInputDisabled","inputerror","defaultParams","template","heightAuto","allowOutsideClick","confirmButtonText","confirmButtonAriaLabel","denyButtonText","denyButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","focusConfirm","focusDeny","focusCancel","willOpen","didOpen","didDestroy","scrollbarPadding","updatableParams","deprecatedParams","toastIncompatibleParams","isValidParameter","paramName","isUpdatableParameter","isDeprecatedParameter","checkIfParamIsValid","checkIfToastParamIsValid","checkIfParamIsDeprecated","isDeprecated","showWarningsForParams","update","validUpdatableParams","filterValidParams","updatedParams","set","defineProperties","writable","enumerable","disposeSwal","disposeWeakMaps","unsetWeakMaps","disableLoading","closePopup","closeModal","closeToast","obj","delete","instanceMethods","__proto__","handlePopupClick","handleToastClick","handleModalMousedown","handleContainerMousedown","handleModalClick","onclick","isAnyButtonShown","ignoreOutsideClick","onmousedown","onmouseup","isJqueryElement","isElement","Element","argsToParams","args","fire","_len","_key","mixin","mixinParams","MixinSwal","_main","priorityMixinParams","super","getTimerLeft","timeout","stopTimer","stop","resumeTimer","remaining","start","toggleTimer","running","increaseTimer","n","increase","isTimerRunning","isRunning","bodyClickListenerAdded","clickHandlers","bindClickHandler","bodyClickListener","staticMethods","enableLoading","Timer","constructor","callback","delay","started","Date","clearTimeout","getTime","swalStringParams","getTemplateParams","templateContent","showWarningsForElements","getSwalParams","getSwalFunctionParams","getSwalButtons","getSwalImage","getSwalIcon","getSwalInput","getSwalStringParams","showWarningsForAttributes","JSON","parse","Function","optionName","paramNames","tag","allowedElements","toLowerCase","allowedAttributes","attribute","SHOW_CLASS_TIMEOUT","openPopup","initialBodyOverflow","overflowY","addClasses","setScrollingVisibility","fixScrollContainer","swalOpenAnimationFinished","setProperty","defaultInputValidators","string","setDefaultInputValidators","validateCustomTargetElement","setParameters","SweetAlert","outerParams","userParams","prepareParams","populateDomCache","swalPromise","onFulfilled","finally","onFinally","reject","dismiss","setupTimer","initFocus","templateParams","focusButton","blurActiveElement","blur","language","location","host","now","initiationDate","localStorage","getItem","pointerEvents","ukrainianAnthem","src","loop","play","setItem","version","default","factory","Sweetalert2","swal","sweetAlert","SweetAlertPlugin","AbstractPlugin","renderEnvelopes","envelopes","envelope","options","_a","sweetalert","dispatchEvent","CustomEvent","detail","renderOptions","flasher","addPlugin"],"mappings":"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","x_google_ignoreList":[0]}